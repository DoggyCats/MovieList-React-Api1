{"version":3,"sources":["components/MovieComponent.js","components/MovieInfoComponent.js","App.js","index.js"],"names":["MovieContainer","styled","div","CoverImage","img","MovieName","span","InfoColumn","MovieInfo","MovieComponent","props","movie","Title","Year","imdbID","Type","Poster","onClick","onMovieSelect","window","scrollTo","top","behavior","src","alt","Container","Close","MovieInfoComponent","useState","movieInfo","setMovieInfo","selectedMovie","useEffect","Axios","get","API_KEY","then","response","data","imdbRating","Language","Released","Runtime","Genre","Director","Actors","Plot","AppName","Header","SearchBox","SearchIcon","MovieImage","SearchInput","input","MovieListContainer","Placeholder","App","searchQuery","updateSearchQuery","movieList","updateMovieList","timeoutId","updateTimeoutId","fetchData","searchString","a","Search","placeholder","value","onChange","e","clearTimeout","target","timeout","setTimeout","length","map","index","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.abc1005d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst MovieContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 10px;\r\n  width: 280px;\r\n  box-shadow: 0 3px 10px 0 #aaa;\r\n  cursor: pointer;\r\n`;\r\nconst CoverImage = styled.img`\r\n  object-fit: cover;\r\n  height: 362px;\r\n`;\r\nconst MovieName = styled.span`\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n  color: black;\r\n  margin: 15px 0;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n`;\r\nconst InfoColumn = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n`;\r\nconst MovieInfo = styled.span`\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  color: black;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-transform: capitalize;\r\n  text-overflow: ellipsis;\r\n`;\r\nconst MovieComponent = (props) => {\r\n  const { Title, Year, imdbID, Type, Poster } = props.movie;\r\n\r\n  return (\r\n    <MovieContainer\r\n      onClick={() => {\r\n        props.onMovieSelect(imdbID);\r\n        window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n      }}\r\n    >\r\n      <CoverImage src={Poster} alt={Title} />\r\n      <MovieName>{Title}</MovieName>\r\n      <InfoColumn>\r\n        <MovieInfo>Year : {Year}</MovieInfo>\r\n        <MovieInfo>Type : {Type}</MovieInfo>\r\n      </InfoColumn>\r\n    </MovieContainer>\r\n  );\r\n};\r\nexport default MovieComponent;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { API_KEY } from \"../App\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  padding: 20px 30px;\r\n  justify-content: center;\r\n  border-bottom: 1px solid lightgray;\r\n`;\r\nconst CoverImage = styled.img`\r\n  object-fit: cover;\r\n  height: 350px;\r\n`;\r\nconst InfoColumn = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 20px;\r\n`;\r\nconst MovieName = styled.span`\r\n  font-size: 22px;\r\n  font-weight: 600;\r\n  color: black;\r\n  margin: 15px 0;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-transform: capitalize;\r\n  text-overflow: ellipsis;\r\n  & span {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\nconst MovieInfo = styled.span`\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  color: black;\r\n  overflow: hidden;\r\n  margin: 4px 0;\r\n  text-transform: capitalize;\r\n  text-overflow: ellipsis;\r\n\r\n  & span {\r\n    opacity: 0.5;\r\n  }\r\n`;\r\nconst Close = styled.span`\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  color: black;\r\n  background: lightgray;\r\n  height: fit-content;\r\n  padding: 8px;\r\n  border-radius: 50%;\r\n  cursor: pointer;\r\n  opacity: 0.8;\r\n`;\r\nconst MovieInfoComponent = (props) => {\r\n  const [movieInfo, setMovieInfo] = useState();\r\n  const { selectedMovie } = props;\r\n\r\n  useEffect(() => {\r\n    Axios.get(\r\n      `https://www.omdbapi.com/?i=${selectedMovie}&apikey=${API_KEY}`,\r\n    ).then((response) => setMovieInfo(response.data));\r\n  }, [selectedMovie]);\r\n  return (\r\n    <Container>\r\n      {movieInfo ? (\r\n        <>\r\n          <CoverImage src={movieInfo?.Poster} alt={movieInfo?.Title} />\r\n          <InfoColumn>\r\n            <MovieName>\r\n              {movieInfo?.Type}: <span>{movieInfo?.Title}</span>\r\n            </MovieName>\r\n            <MovieInfo>\r\n              คะแนนIMDB: <span>{movieInfo?.imdbRating}</span>\r\n            </MovieInfo>\r\n            <MovieInfo>\r\n              ปี ค.ส.: <span>{movieInfo?.Year}</span>\r\n            </MovieInfo>\r\n            <MovieInfo>\r\n              ภาษา: <span>{movieInfo?.Language}</span>\r\n            </MovieInfo>\r\n            <MovieInfo>\r\n              วันเข้าฉาย: <span>{movieInfo?.Released}</span>\r\n            </MovieInfo>\r\n            <MovieInfo>\r\n              ระยะเวลาหนัง: <span>{movieInfo?.Runtime}</span>\r\n            </MovieInfo>\r\n            <MovieInfo>\r\n              ประเภท: <span>{movieInfo?.Genre}</span>\r\n            </MovieInfo>\r\n            <MovieInfo>\r\n              ผู้กำกับ: <span>{movieInfo?.Director}</span>\r\n            </MovieInfo>\r\n            <MovieInfo>\r\n              นักแสดง: <span>{movieInfo?.Actors}</span>\r\n            </MovieInfo>\r\n            <MovieInfo>\r\n              เนื้อเรื่องย่อ: <span>{movieInfo?.Plot}</span>\r\n            </MovieInfo>\r\n          </InfoColumn>\r\n          <Close onClick={() => props.onMovieSelect()}>X</Close>\r\n        </>\r\n      ) : (\r\n        \"Loading...\"\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\nexport default MovieInfoComponent;\r\n","import React, { useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport MovieComponent from \"./components/MovieComponent\";\r\nimport MovieInfoComponent from \"./components/MovieInfoComponent\";\r\n\r\nexport const API_KEY = \"30b24421\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nconst AppName = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\nconst Header = styled.div`\r\n  background-color: palevioletred;\r\n  color: black;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  padding: 10px;\r\n  font-size: 25px;\r\n  font-weight: bold;\r\n  box-shadow: 0 3px 6px 0 #555;\r\n`;\r\nconst SearchBox = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  padding: 10px 10px;\r\n  border-radius: 6px;\r\n  margin-left: 20px;\r\n  width: 50%;\r\n  background-color: white;\r\n`;\r\nconst SearchIcon = styled.img`\r\n  width: 32px;\r\n  height: 32px;\r\n`;// icon รูปค้นหา\r\nconst MovieImage = styled.img`\r\n  width: 420px;\r\n  height: 90px;\r\n  margin: 15px;\r\n`; //รูปที่แสดงหลังจากค้นหา\r\nconst SearchInput = styled.input`\r\n  color: black;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  border: none;\r\n  outline: none;\r\n  margin-left: 15px;\r\n`; // ตัวอักษรเวลาพิมพ์ช่องค้นหา\r\nconst MovieListContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  padding: 30px;\r\n  gap: 25px;\r\n  justify-content: space-evenly;;\r\n`;\r\nconst Placeholder = styled.img` \r\n  width: 500x;\r\n  height: 500px;\r\n  margin: 150px;\r\n  opacity: 20%;\r\n`; //รูปกลางจอ\r\n\r\nfunction App() {\r\n  const [searchQuery, updateSearchQuery] = useState(\"\");\r\n\r\n  const [movieList, updateMovieList] = useState([]);\r\n  const [selectedMovie, onMovieSelect] = useState();\r\n\r\n  const [timeoutId, updateTimeoutId] = useState();\r\n\r\n  const fetchData = async (searchString) => {\r\n    const response = await Axios.get(\r\n      `https://www.omdbapi.com/?s=${searchString}&apikey=${API_KEY}`,\r\n    );\r\n    updateMovieList(response.data.Search);\r\n  };\r\n\r\n  const onTextChange = (e) => {\r\n    onMovieSelect(\"\")\r\n    clearTimeout(timeoutId);\r\n    updateSearchQuery(e.target.value);\r\n    const timeout = setTimeout(() => fetchData(e.target.value), 500);\r\n    updateTimeoutId(timeout);\r\n  };\r\n  return (\r\n    <Container>\r\n      <Header>\r\n        <AppName>\r\n          <MovieImage src=\"/xukaprops/xukaz-logo.png\" />\r\n          Movie App \r\n        </AppName>\r\n        <SearchBox>\r\n          <SearchIcon src=\"/xukaprops/search-icon.svg\" />\r\n          <SearchInput\r\n            placeholder=\"ค้นหาหนังที่สนใจ...\"\r\n            value={searchQuery}\r\n            onChange={onTextChange}\r\n          />\r\n        </SearchBox>\r\n      </Header>\r\n      {selectedMovie && <MovieInfoComponent selectedMovie={selectedMovie} onMovieSelect={onMovieSelect}/>}\r\n      <MovieListContainer>\r\n        {movieList?.length ? (\r\n          movieList.map((movie, index) => (\r\n            <MovieComponent\r\n              key={index}\r\n              movie={movie}\r\n              onMovieSelect={onMovieSelect}\r\n            />\r\n          ))\r\n        ) : (\r\n          <Placeholder src=\"/xukaprops/xukaz-icon.png\" />\r\n        )}\r\n      </MovieListContainer>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}